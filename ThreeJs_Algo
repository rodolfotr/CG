var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);

var renderer = new THREE.WebGLRenderer({depth: true});
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

var geometry = new THREE.BoxGeometry(1,1,1);
var material = new THREE.MeshBasicMaterial({color: 0xffffff});
var base = new THREE.Mesh(geometry, material);
base.rotation.x = Math.PI / 2;
base.scale.set(20,20,1);
base.position.set(0,0,0);
scene.add(base);

var geometry = new THREE.BoxGeometry(1,1,1);
var material = new THREE.MeshBasicMaterial({color: 0xffff00});
var tower = new THREE.Mesh(geometry, material);
tower.position.set(5,6,0);
tower.scale.set(2,10,2);
scene.add(tower);

var geometry = new THREE.BoxGeometry(1,1,1);
var material = new THREE.MeshBasicMaterial({color: 0xf0000f});
var cube1 = new THREE.Mesh(geometry, material);
cube1.position.set(-5,2,-5);
cube1.scale.set(2,2,2);
scene.add(cube1);

var geometry = new THREE.BoxGeometry(1,1,1);
var material = new THREE.MeshBasicMaterial({color: 0x0ffff0});
var cube2 = new THREE.Mesh(geometry, material);
cube2.position.set(-5,2,5);
cube2.scale.set(2,2,2);
scene.add(cube2);

camera.position.z = 20;
camera.position.y = 10;
camera.rotation.x = -.5;

var dir1 = 1;

var animate = function() {
    requestAnimationFrame(animate);
    
    if(cube1.x<=-10||cube1.x>=10)
        dir1 *= -1;
    cube1.x += .01 * dir1;

    renderer.render(scene, camera);
};

animate();
